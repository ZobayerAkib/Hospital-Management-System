/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Doctor;

import Connector.ConnectorClass;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login.loginClass;

/**
 *
 * @author Mahin
 */
public class View_doctor extends javax.swing.JFrame {

    /**
     * Creates new form View_doctor
     */
    public View_doctor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText(" Id :");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 101, 37));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 150, 30));

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient Age", "Patient Blood Group", "Nurse Name", "Room No", "Disease", "Discharge"
            }
        ));
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 240, 850, 350));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Enter");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 90, 40));

        clear.setBackground(new java.awt.Color(153, 153, 153));
        clear.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        clear.setForeground(new java.awt.Color(51, 102, 255));
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Doctor/Reset.png"))); // NOI18N
        clear.setText("Reset");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 609, -1, 40));

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Log Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 610, -1, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Show");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 73, -1));

        jComboBox1.setBackground(new java.awt.Color(0, 102, 255));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "WARD", "ICU", "CCU", "HDU" }));
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 152, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Total :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 599, 74, 40));

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 611, 192, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(255, 0, 0));
        jRadioButton1.setText("Default");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 130, -1, 30));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(255, 0, 0));
        jRadioButton2.setText("Yes");
        getContentPane().add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, -1, 30));

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(255, 0, 0));
        jRadioButton3.setText("No");
        getContentPane().add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 130, 50, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Discharge");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 73, 70));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Doctor/photo-1587370560942-ad2a04eabb6d.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -50, 900, 780));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String text = jTextField1.getText();
        int selected = jComboBox1.getSelectedIndex();
        String sText = (String) jComboBox1.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        boolean b1 = jRadioButton1.isSelected();
        boolean b2 = jRadioButton2.isSelected();
        boolean b3 = jRadioButton3.isSelected();
        
        
        model.setRowCount(0);
        jTextField2.setText("");
        try {
            Connection connection = ConnectorClass.getcon();
            Statement statementToShow = connection.createStatement();
            if (selected == 0 && b1) {
                String sqlShow = "select *from Doctor left join Patient on doctor_id=patient_doctor_id  left join Nurse on nurse_id=patient_nurse_id  left join Disease on disease_id=patient_disease_id where doctor_id='" + text + "'";

                ResultSet result = statementToShow.executeQuery(sqlShow);

                while (result.next()) {

                    String patientName = result.getString("patient_name");
                    String patientAge = result.getString("patient_age");
                    String patientBG = result.getString("patient_blood_group");
                    String nurseName = result.getString("nurse_name");
                    int cabinId = result.getInt("patient_cabin_id");
                    String diseaseName = result.getString("disease_name");
                    String disch = result.getString("patient_discharge");
                    model.addRow(new Object[]{patientName, patientAge, patientBG, nurseName, cabinId, diseaseName,disch});

                }
                String total = "SELECT COUNT(*) AS total FROM Patient where patient_doctor_id='" + text + "'";
                ResultSet result2 = statementToShow.executeQuery(total);
                while(result2.next()){
                    jTextField2.setText(Integer.toString(result2.getInt("total")));
                }
            }
            if (selected == 0 && b2) {
                String sqlShow = "select *from Doctor left join Patient on doctor_id=patient_doctor_id  left join Nurse on nurse_id=patient_nurse_id  left join Disease on disease_id=patient_disease_id where doctor_id='" + text + "' and patient_discharge='yes'";

                ResultSet result = statementToShow.executeQuery(sqlShow);

                while (result.next()) {

                    String patientName = result.getString("patient_name");
                    String patientAge = result.getString("patient_age");
                    String patientBG = result.getString("patient_blood_group");
                    String nurseName = result.getString("nurse_name");
                    int cabinId = result.getInt("patient_cabin_id");
                    String diseaseName = result.getString("disease_name");
                    String disch = result.getString("patient_discharge");
                    model.addRow(new Object[]{patientName, patientAge, patientBG, nurseName, cabinId, diseaseName,disch});

                }
                String total = "SELECT COUNT(*) AS total FROM Patient where patient_doctor_id='" + text + "' and patient_discharge='yes'";
                ResultSet result2 = statementToShow.executeQuery(total);
                while(result2.next()){
                    jTextField2.setText(Integer.toString(result2.getInt("total")));
                }
            }
            if (selected == 0 && b3) {
                String sqlShow = "select *from Doctor left join Patient on doctor_id=patient_doctor_id  left join Nurse on nurse_id=patient_nurse_id  left join Disease on disease_id=patient_disease_id where doctor_id='" + text + "' and patient_discharge='no'";

                ResultSet result = statementToShow.executeQuery(sqlShow);

                while (result.next()) {

                    String patientName = result.getString("patient_name");
                    String patientAge = result.getString("patient_age");
                    String patientBG = result.getString("patient_blood_group");
                    String nurseName = result.getString("nurse_name");
                    int cabinId = result.getInt("patient_cabin_id");
                    String diseaseName = result.getString("disease_name");
                    String disch = result.getString("patient_discharge");
                    model.addRow(new Object[]{patientName, patientAge, patientBG, nurseName, cabinId, diseaseName,disch});

                }
                String total = "SELECT COUNT(*) AS total FROM Patient where patient_doctor_id='" + text + "' and patient_discharge='no'";
                ResultSet result2 = statementToShow.executeQuery(total);
                while(result2.next()){
                    jTextField2.setText(Integer.toString(result2.getInt("total")));
                }
            }
            if((selected ==1 || selected==2 || selected==3 || selected==4) && b1)
            {
                String sqlShow = "select *from Doctor left join Patient on doctor_id=patient_doctor_id  left join Nurse on nurse_id=patient_nurse_id  left join Disease on disease_id=patient_disease_id where patient_cabin_id in (select cabin_id from Cabin where cabin_type='"+sText+"') and patient_doctor_id='"+text+"'";
                ResultSet result = statementToShow.executeQuery(sqlShow);

                while (result.next()) {

                    String patientName = result.getString("patient_name");
                    String patientAge = result.getString("patient_age");
                    String patientBG = result.getString("patient_blood_group");
                    String nurseName = result.getString("nurse_name");
                    int cabinId = result.getInt("patient_cabin_id");
                    String diseaseName = result.getString("disease_name");
                    String disch = result.getString("patient_discharge");
                    model.addRow(new Object[]{patientName, patientAge, patientBG, nurseName, cabinId, diseaseName,disch});

                }
                String total = "select count(patient_id) as total from Patient where patient_doctor_id='"+text+"' group by patient_cabin_id having patient_cabin_id in (select cabin_id from Cabin where cabin_type='"+sText+"')";
                ResultSet result2 = statementToShow.executeQuery(total);
                while(result2.next()){
                    jTextField2.setText(Integer.toString(result2.getInt("total")));
                }
            
            }
            if((selected ==1 || selected==2 || selected==3 || selected==4) && b2)
            {
                String sqlShow = "select *from Doctor left join Patient on doctor_id=patient_doctor_id  left join Nurse on nurse_id=patient_nurse_id  left join Disease on disease_id=patient_disease_id where patient_cabin_id in (select cabin_id from Cabin where cabin_type='"+sText+"') and patient_doctor_id='"+text+"' and patient_discharge='yes'";
                ResultSet result = statementToShow.executeQuery(sqlShow);

                while (result.next()) {

                    String patientName = result.getString("patient_name");
                    String patientAge = result.getString("patient_age");
                    String patientBG = result.getString("patient_blood_group");
                    String nurseName = result.getString("nurse_name");
                    int cabinId = result.getInt("patient_cabin_id");
                    String diseaseName = result.getString("disease_name");
                    String disch = result.getString("patient_discharge");
                    model.addRow(new Object[]{patientName, patientAge, patientBG, nurseName, cabinId, diseaseName,disch});

                }
                String total = "select count(patient_id) as total from Patient where patient_doctor_id='"+text+"' and patient_discharge='yes' group by patient_cabin_id having patient_cabin_id in (select cabin_id from Cabin where cabin_type='"+sText+"')";
                ResultSet result2 = statementToShow.executeQuery(total);
                while(result2.next()){
                    jTextField2.setText(Integer.toString(result2.getInt("total")));
                }
            
            }
              if((selected ==1 || selected==2 || selected==3 || selected==4) && b3)
            {
                String sqlShow = "select *from Doctor left join Patient on doctor_id=patient_doctor_id  left join Nurse on nurse_id=patient_nurse_id  left join Disease on disease_id=patient_disease_id where patient_cabin_id in (select cabin_id from Cabin where cabin_type='"+sText+"') and patient_doctor_id='"+text+"' and patient_discharge='no'";
                ResultSet result = statementToShow.executeQuery(sqlShow);

                while (result.next()) {

                    String patientName = result.getString("patient_name");
                    String patientAge = result.getString("patient_age");
                    String patientBG = result.getString("patient_blood_group");
                    String nurseName = result.getString("nurse_name");
                    int cabinId = result.getInt("patient_cabin_id");
                    String diseaseName = result.getString("disease_name");
                    String disch = result.getString("patient_discharge");
                    model.addRow(new Object[]{patientName, patientAge, patientBG, nurseName, cabinId, diseaseName,disch});

                }
                String total = "select count(patient_id) as total from Patient where patient_doctor_id='"+text+"' and patient_discharge='no' group by patient_cabin_id having patient_cabin_id in (select cabin_id from Cabin where cabin_type='"+sText+"')";
                ResultSet result2 = statementToShow.executeQuery(total);
                while(result2.next()){
                    jTextField2.setText(Integer.toString(result2.getInt("total")));
                }
            
            }

        } catch (Exception e) {
            System.out.print(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        jTextField2.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         int selectedOption = JOptionPane.showConfirmDialog(null,
            "Do you want to log out?",
            "Choose",
            JOptionPane.YES_NO_OPTION);

        if (selectedOption == JOptionPane.YES_OPTION) {
            setVisible(false);
            new loginClass().setVisible(true);

        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
